generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        String   @id 
  comment   String
  timestamp DateTime @default(now())
  userId    String
  postingId String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  posts     Posting  @relation(fields: [postingId], references: [id], onDelete: Cascade)
}

model Posting {
  id          String    @id
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  gameTitle   String
  title       String
  content     String?
  userId      String    
  thumbnailId String  @unique
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment     Comment[]
  thumbnail   Thumbnail?
  bookMark    BookMark[]  
}

model User {
  id        String    @id
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  email     String    @unique
  password  String
  userName  String?
  role      UserRole
  comments  Comment[]
  posts     Posting[]
  avatar    Avatar?
  bookMark  BookMark[] 
}

model Avatar {
  id             String @id
  avatarFileName String
  avatarImgURL   String
  userId         String @unique
  user           User @relation(fields: [userId],references: [id],onDelete: Cascade)
}

enum UserRole {
  ADMIN
  USER
}

model Thumbnail {
  id                String @id
  postingId         String @unique
  thumbnailFileName String
  imageURL          String
  post              Posting @relation(fields: [postingId], references: [id], onDelete: Cascade)
}

model BookMark {
  id        String @id 
  postingId String @unique
  userId    String @unique
  @@unique([postingId,userId], name:"bookMark_user")
  user      User @relation(fields: [userId],references: [id],onDelete: Cascade)
  post      Posting @relation(fields: [postingId],references: [id],onDelete: Cascade)
}